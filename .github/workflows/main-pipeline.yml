name: üöÄ Java CI/CD Pipeline

on:
  push:
    branches: ['main']
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
    AZURE_WEBAPP_NAME: linkhub
    JAVA_VERSION: 17
    MYSQL_CONNECT_STRING: ${{ secrets.MYSQL_CONNECT_STRING }}
    MYSQL_USERNAME: ${{ secrets.MYSQL_USERNAME }}
    MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}

jobs:
  build:
    name: üèóÔ∏è Build & Validation
    runs-on: ubuntu-latest
    steps:
      - name: üì• Retrieve Code From Repo
        uses: actions/checkout@v3.5.2
        with:
          fetch-depth: 0

      - name: üõ† Install Java 17
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'zulu'
          cache: maven

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=GoDevBrazil_link-hub-service

      - name: Sonar Build Breaker
        uses: jkumar19/sonar-build-breaker@v1.0.0
        with:
          sonar_url: "https://sonarcloud.io"
          sonar_branch: "main"
          sonar_token: ${{ secrets.SONAR_TOKEN }}
          project_key: "GoDevBrazil_link-hub-service"

      - name: üîê Docker Login
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKER_USER_NAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Create application container image
        uses: docker/build-push-action@v4.0.0
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: |
            jecesariodev/link-hub-service:latest
            jecesariodev/link-hub-service:v${{ github.run_number }}

  deploy-dev:
      name: üöÄ Deploy DEV
      runs-on: ubuntu-latest
      needs: build
      if: github.ref == 'refs/heads/main'
      steps:
        - name: Deploy in Azure Web App
          uses: Azure/webapps-deploy@v2.2.10
          with:
            app-name: ${{ env.AZURE_WEBAPP_NAME }}
            publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
            images: jecesariodev/link-hub-service:v${{ github.run_number }}